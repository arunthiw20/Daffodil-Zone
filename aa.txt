import React, { Component } from 'react';
import axios from 'axios';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import Table from 'react-bootstrap/Table';
import '../../pages/AddHouse.css';

class AddHouse extends Component {
  constructor(props) {
    super(props);

    this.state = {
      image1: null,
      image2: null,
      image3: null,
      image4: null,
      image5: null,
      image6: null,
      description: '',
      district: '',
      address: '',
      no_of_rooms: '',
      no_of_bathrooms: '',
      land_size: '',
      distance: '',
      houseType: '',
      storey: '',
      keyWord: '',
      sessionId: '', // Add sessionId state
      responseMsg: {
        status: '',
        message: '',
        error: '',
      },
      houses: [],
    };
  }

  componentDidMount() {
    this.fetchHouses();
    
    const sessionId = sessionStorage.getItem('user_id'); 
    if (sessionId) {
      this.setState({ sessionId }); 
    }
  }

  fetchHouses = () => {
    axios.get('http://127.0.0.1:5000/displayHouses')
      .then((response) => {
        console.log(response.data);
        this.setState({ houses: response.data });
      })
      .catch((error) => {
        console.error('Error fetching houses:', error);
      });
  };

  handleFileChange = (e) => {
    const { name, files } = e.target;
    this.setState({ [name]: files[0] });
  };

  handleInputChange = (e) => {
    const { name, value } = e.target;
    this.setState({ [name]: value });
  };

  
  submitHandler = (e) => {
    const { district, address, no_of_rooms, no_of_bathrooms, land_size, distance, houseType, storey, keyWord, sessionId } = this.state;

    const message = `
      District: ${district}
      Address: ${address}
      Number of Rooms: ${no_of_rooms}
      Number of Bathrooms: ${no_of_bathrooms}
      Land Size: ${land_size}
      Distance: ${distance}
      House Type: ${houseType}
      Storey: ${storey}
      Key Word: ${keyWord}
      Session ID: ${sessionId} 
    `;

    if (window.confirm(`Please confirm the following details:\n${message}`)) {
      e.preventDefault();
      
      const data = new FormData();
      data.append('image1', this.state.image1);
      data.append('image2', this.state.image2);
      data.append('image3', this.state.image3);
      data.append('image4', this.state.image4);
      data.append('image5', this.state.image5);
      data.append('image6', this.state.image6);
      data.append('description', this.state.description);
      data.append('district', district);
      data.append('address', address);
      data.append('no_of_rooms', no_of_rooms);
      data.append('no_of_bathrooms', no_of_bathrooms);
      data.append('land_size', land_size);
      data.append('distance', distance);
      data.append('houseType', houseType);
      data.append('storey', storey);
      data.append('keyWord', keyWord);
      data.append('sessionId', sessionId); 
         
      console.log('Session ID:', sessionId);      
      if (!sessionId) {
    
        console.error('Session ID is missing!');
        
      }


      axios.post('http://127.0.0.1:5000/addAgentHouse', data)
        .then((response) => {
          console.log(response);
          if (response.status === 201) {
            this.setState({
              responseMsg: {
                status: 'success',
                message: 'Successfully Uploaded',
                error: '',
              },
            });

            this.fetchHouses(); // Fetch the updated house list

            setTimeout(() => {
              this.setState({
                image1: null,
                image2: null,
                image3: null,
                image4: null,
                image5: null,
                image6: null,
                description: '',
                district: '',
                address: '',
                no_of_rooms: '',
                no_of_bathrooms: '',
                land_size: '',
                distance: '',
                houseType: '',
                storey: '',
                keyWord: '',
                responseMsg: {
                  status: '',
                  message: '',
                  error: '',
                },
              });
              document.querySelector('#houseForm').reset(); // Reset the form
            }, 1000);
          }
        })
        .catch((error) => {
          console.error(error);
          if (error.response) {
            this.setState({
              responseMsg: {
                status: 'failed',
                message: '',
                error: 'Upload Failed',
              },
            });
          }
        });
    }
  };

  render() {
    const { responseMsg, houses } = this.state;

    return (
      <div>
        <div className='body'>
          <form onSubmit={this.submitHandler} encType="multipart/form-data" id="houseForm">
            {responseMsg.status === 'success' && <div style={{ color: 'green' }}>{responseMsg.message}</div>}
            {responseMsg.status === 'failed' && <div style={{ color: 'red' }}>{responseMsg.error}</div>}
            {responseMsg.error && <div style={{ color: 'red' }}>{responseMsg.error}</div>}<br />
            
            <div className='bodyProperties'>
              <h5>Add Details</h5>
              <Container className="custom-container">
                <Row>
                  <Col>
                    <label htmlFor="district">District</label><br />
                    <input
                      type="text"
                      name="district"
                      value={this.state.district}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col>
                  <Col>
                    <label htmlFor="address">Address</label><br />
                    <input
                      type="text"
                      name="address"
                      value={this.state.address}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col>
                </Row>
                <Row>
                  <Col>
                    <label htmlFor="no_of_rooms">Number of Rooms</label><br />
                    <input
                      type="number"
                      name="no_of_rooms"
                      value={this.state.no_of_rooms}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col>
                  <Col>  
                    <label htmlFor="no_of_bathrooms">Number of Bathrooms</label><br />
                    <input
                      type="number"
                      name="no_of_bathrooms"
                      value={this.state.no_of_bathrooms}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col> 
                </Row>
                <Row>
                  <Col>
                    <label htmlFor="land_size">Land Size(perches)</label><br />
                    <input
                      type="number"
                      name="land_size"
                      value={this.state.land_size}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col>
                  <Col>
                    <label htmlFor="distance">Distance to town (KM)</label><br />
                    <input
                      type="number"
                      name="distance"
                      value={this.state.distance}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col>
                </Row>
                <Row>
                  <Col>
                    <label htmlFor="storey">Storey</label><br />
                    <input
                      type="number"
                      name="storey"
                      value={this.state.storey}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col>
                  <Col>
                    <label htmlFor="keyWord">Key word</label><br />
                    <input
                      type="text"
                      name="keyWord"
                      value={this.state.keyWord}
                      onChange={this.handleInputChange}
                      className="form-control"
                    /><br />
                  </Col>
                </Row>
                <label htmlFor="houseType">House Type</label><br />
                <select
                  name="houseType"
                  value={this.state.houseType}
                  onChange={this.handleInputChange}
                  className="form-control"
                >
                  <option value="">Select House Type</option>
                  <option value="Luxury">Luxury</option>
                  <option value="Standard">Standard</option>
                  <option value="Economy">Economy</option>
                </select><br />
                
                <label htmlFor="description">Description</label><br />
                <textarea
                  name="description"
                  value={this.state.description}
                  onChange={this.handleInputChange}
                  className="form-control"
                /><br />

                <label htmlFor="image1">Image 1</label><br />
                <input
                  type="file"
                  name="image1"
                  onChange={this.handleFileChange}
                  accept="image/*"
                /><br />
                <label htmlFor="image2">Image 2</label><br />
                <input
                  type="file"
                  name="image2"
                  onChange={this.handleFileChange}
                  accept="image/*"
                /><br />
                <label htmlFor="image3">Image 3</label><br />
                <input
                  type="file"
                  name="image3"
                  onChange={this.handleFileChange}
                  accept="image/*"
                /><br />
                <label htmlFor="image4">Image 4</label><br />
                <input
                  type="file"
                  name="image4"
                  onChange={this.handleFileChange}
                  accept="image/*"
                /><br />
                <label htmlFor="image5">Image 5</label><br />
                <input
                  type="file"
                  name="image5"
                  onChange={this.handleFileChange}
                  accept="image/*"
                /><br />
                <label htmlFor="image6">Image 6</label><br />
                <input
                  type="file"
                  name="image6"
                  onChange={this.handleFileChange}
                  accept="image/*"
                /><br />
                <button type="submit" className="btn btn-primary">Submit</button>
              </Container>
            </div>
          </form>
          <div>
            <h5>Current House Listings</h5>
            <Table striped bordered hover>
              <thead>
                <tr>
                  <th>District</th>
                  <th>Address</th>
                  <th>No. of Rooms</th>
                  <th>No. of Bathrooms</th>
                  <th>Land Size</th>
                  <th>Distance</th>
                  <th>Type</th>
                  <th>Storey</th>
                </tr>
              </thead>
              <tbody>
                {houses.map(house => (
                  <tr key={house.id}>
                    <td>{house.district}</td>
                    <td>{house.address}</td>
                    <td>{house.no_of_rooms}</td>
                    <td>{house.no_of_bathrooms}</td>
                    <td>{house.land_size}</td>
                    <td>{house.distance}</td>
                    <td>{house.houseType}</td>
                    <td>{house.storey}</td>
                  </tr>
                ))}
              </tbody>
            </Table>
          </div>
        </div>
      </div>
    );
  }
}

export default AddHouse;
